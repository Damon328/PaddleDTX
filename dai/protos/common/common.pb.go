// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common/common.proto

package common // import "github.com/PaddlePaddle/PaddleDTX/dai/protos/common"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Algorithm is a list of algorithms offered
type Algorithm int32

const (
	Algorithm_LINEAR_REGRESSION_VL Algorithm = 0
	Algorithm_LOGIC_REGRESSION_VL  Algorithm = 1
	Algorithm_DNN_PADDLEFL_VL      Algorithm = 2
)

var Algorithm_name = map[int32]string{
	0: "LINEAR_REGRESSION_VL",
	1: "LOGIC_REGRESSION_VL",
	2: "DNN_PADDLEFL_VL",
}
var Algorithm_value = map[string]int32{
	"LINEAR_REGRESSION_VL": 0,
	"LOGIC_REGRESSION_VL":  1,
	"DNN_PADDLEFL_VL":      2,
}

func (x Algorithm) String() string {
	return proto.EnumName(Algorithm_name, int32(x))
}
func (Algorithm) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_d12016c60a6e2fb7, []int{0}
}

// TaskType defines types of task
type TaskType int32

const (
	TaskType_LEARN   TaskType = 0
	TaskType_PREDICT TaskType = 1
)

var TaskType_name = map[int32]string{
	0: "LEARN",
	1: "PREDICT",
}
var TaskType_value = map[string]int32{
	"LEARN":   0,
	"PREDICT": 1,
}

func (x TaskType) String() string {
	return proto.EnumName(TaskType_name, int32(x))
}
func (TaskType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_d12016c60a6e2fb7, []int{1}
}

// RegMode regulation mode for training
type RegMode int32

const (
	RegMode_Reg_None  RegMode = 0
	RegMode_Reg_Lasso RegMode = 1
	RegMode_Reg_Ridge RegMode = 2
)

var RegMode_name = map[int32]string{
	0: "Reg_None",
	1: "Reg_Lasso",
	2: "Reg_Ridge",
}
var RegMode_value = map[string]int32{
	"Reg_None":  0,
	"Reg_Lasso": 1,
	"Reg_Ridge": 2,
}

func (x RegMode) String() string {
	return proto.EnumName(RegMode_name, int32(x))
}
func (RegMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_d12016c60a6e2fb7, []int{2}
}

// EvaluationRule defines the ways of evaluation
type EvaluationRule int32

const (
	// to divide the dataset randomly by percentage,
	// which represents the subset as validation set, and the rest is training set.
	EvaluationRule_ErRandomSplit EvaluationRule = 0
	// Cross Validation
	EvaluationRule_ErCrossVal EvaluationRule = 1
	// Leave One Out and is suitable for small datasets
	EvaluationRule_ErLOO EvaluationRule = 2
)

var EvaluationRule_name = map[int32]string{
	0: "ErRandomSplit",
	1: "ErCrossVal",
	2: "ErLOO",
}
var EvaluationRule_value = map[string]int32{
	"ErRandomSplit": 0,
	"ErCrossVal":    1,
	"ErLOO":         2,
}

func (x EvaluationRule) String() string {
	return proto.EnumName(EvaluationRule_name, int32(x))
}
func (EvaluationRule) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_d12016c60a6e2fb7, []int{3}
}

// CaseType defines the types of problems
type CaseType int32

const (
	CaseType_Regression  CaseType = 0
	CaseType_BinaryClass CaseType = 1
)

var CaseType_name = map[int32]string{
	0: "Regression",
	1: "BinaryClass",
}
var CaseType_value = map[string]int32{
	"Regression":  0,
	"BinaryClass": 1,
}

func (x CaseType) String() string {
	return proto.EnumName(CaseType_name, int32(x))
}
func (CaseType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_d12016c60a6e2fb7, []int{4}
}

// TrainParams lists all the parameters for training
type TrainParams struct {
	Label                string   `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
	LabelName            string   `protobuf:"bytes,2,opt,name=labelName" json:"labelName,omitempty"`
	RegMode              RegMode  `protobuf:"varint,3,opt,name=regMode,enum=common.RegMode" json:"regMode,omitempty"`
	RegParam             float64  `protobuf:"fixed64,4,opt,name=regParam" json:"regParam,omitempty"`
	Alpha                float64  `protobuf:"fixed64,5,opt,name=alpha" json:"alpha,omitempty"`
	Amplitude            float64  `protobuf:"fixed64,6,opt,name=amplitude" json:"amplitude,omitempty"`
	Accuracy             int64    `protobuf:"varint,7,opt,name=accuracy" json:"accuracy,omitempty"`
	IsTagPart            bool     `protobuf:"varint,8,opt,name=isTagPart" json:"isTagPart,omitempty"`
	IdName               string   `protobuf:"bytes,9,opt,name=idName" json:"idName,omitempty"`
	BatchSize            int64    `protobuf:"varint,10,opt,name=BatchSize" json:"BatchSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrainParams) Reset()         { *m = TrainParams{} }
func (m *TrainParams) String() string { return proto.CompactTextString(m) }
func (*TrainParams) ProtoMessage()    {}
func (*TrainParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_d12016c60a6e2fb7, []int{0}
}
func (m *TrainParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrainParams.Unmarshal(m, b)
}
func (m *TrainParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrainParams.Marshal(b, m, deterministic)
}
func (dst *TrainParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrainParams.Merge(dst, src)
}
func (m *TrainParams) XXX_Size() int {
	return xxx_messageInfo_TrainParams.Size(m)
}
func (m *TrainParams) XXX_DiscardUnknown() {
	xxx_messageInfo_TrainParams.DiscardUnknown(m)
}

var xxx_messageInfo_TrainParams proto.InternalMessageInfo

func (m *TrainParams) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *TrainParams) GetLabelName() string {
	if m != nil {
		return m.LabelName
	}
	return ""
}

func (m *TrainParams) GetRegMode() RegMode {
	if m != nil {
		return m.RegMode
	}
	return RegMode_Reg_None
}

func (m *TrainParams) GetRegParam() float64 {
	if m != nil {
		return m.RegParam
	}
	return 0
}

func (m *TrainParams) GetAlpha() float64 {
	if m != nil {
		return m.Alpha
	}
	return 0
}

func (m *TrainParams) GetAmplitude() float64 {
	if m != nil {
		return m.Amplitude
	}
	return 0
}

func (m *TrainParams) GetAccuracy() int64 {
	if m != nil {
		return m.Accuracy
	}
	return 0
}

func (m *TrainParams) GetIsTagPart() bool {
	if m != nil {
		return m.IsTagPart
	}
	return false
}

func (m *TrainParams) GetIdName() string {
	if m != nil {
		return m.IdName
	}
	return ""
}

func (m *TrainParams) GetBatchSize() int64 {
	if m != nil {
		return m.BatchSize
	}
	return 0
}

// TrainModels is final result of distributed training
type TrainModels struct {
	Thetas               map[string]float64 `protobuf:"bytes,1,rep,name=thetas" json:"thetas,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	Xbars                map[string]float64 `protobuf:"bytes,2,rep,name=xbars" json:"xbars,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	Sigmas               map[string]float64 `protobuf:"bytes,3,rep,name=sigmas" json:"sigmas,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	Label                string             `protobuf:"bytes,4,opt,name=label" json:"label,omitempty"`
	IsTagPart            bool               `protobuf:"varint,5,opt,name=isTagPart" json:"isTagPart,omitempty"`
	IdName               string             `protobuf:"bytes,6,opt,name=idName" json:"idName,omitempty"`
	Path                 string             `protobuf:"bytes,7,opt,name=path" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TrainModels) Reset()         { *m = TrainModels{} }
func (m *TrainModels) String() string { return proto.CompactTextString(m) }
func (*TrainModels) ProtoMessage()    {}
func (*TrainModels) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_d12016c60a6e2fb7, []int{1}
}
func (m *TrainModels) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrainModels.Unmarshal(m, b)
}
func (m *TrainModels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrainModels.Marshal(b, m, deterministic)
}
func (dst *TrainModels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrainModels.Merge(dst, src)
}
func (m *TrainModels) XXX_Size() int {
	return xxx_messageInfo_TrainModels.Size(m)
}
func (m *TrainModels) XXX_DiscardUnknown() {
	xxx_messageInfo_TrainModels.DiscardUnknown(m)
}

var xxx_messageInfo_TrainModels proto.InternalMessageInfo

func (m *TrainModels) GetThetas() map[string]float64 {
	if m != nil {
		return m.Thetas
	}
	return nil
}

func (m *TrainModels) GetXbars() map[string]float64 {
	if m != nil {
		return m.Xbars
	}
	return nil
}

func (m *TrainModels) GetSigmas() map[string]float64 {
	if m != nil {
		return m.Sigmas
	}
	return nil
}

func (m *TrainModels) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *TrainModels) GetIsTagPart() bool {
	if m != nil {
		return m.IsTagPart
	}
	return false
}

func (m *TrainModels) GetIdName() string {
	if m != nil {
		return m.IdName
	}
	return ""
}

func (m *TrainModels) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

// TaskParams lists all the parameters in a task
type TaskParams struct {
	Algo                 Algorithm             `protobuf:"varint,1,opt,name=algo,enum=common.Algorithm" json:"algo,omitempty"`
	TaskType             TaskType              `protobuf:"varint,2,opt,name=taskType,enum=common.TaskType" json:"taskType,omitempty"`
	TrainParams          *TrainParams          `protobuf:"bytes,3,opt,name=trainParams" json:"trainParams,omitempty"`
	ModelTaskID          string                `protobuf:"bytes,4,opt,name=modelTaskID" json:"modelTaskID,omitempty"`
	ModelParams          *TrainModels          `protobuf:"bytes,5,opt,name=modelParams" json:"modelParams,omitempty"`
	EvalParams           *EvaluationParams     `protobuf:"bytes,6,opt,name=evalParams" json:"evalParams,omitempty"`
	LivalParams          *LiveEvaluationParams `protobuf:"bytes,7,opt,name=livalParams" json:"livalParams,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TaskParams) Reset()         { *m = TaskParams{} }
func (m *TaskParams) String() string { return proto.CompactTextString(m) }
func (*TaskParams) ProtoMessage()    {}
func (*TaskParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_d12016c60a6e2fb7, []int{2}
}
func (m *TaskParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskParams.Unmarshal(m, b)
}
func (m *TaskParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskParams.Marshal(b, m, deterministic)
}
func (dst *TaskParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskParams.Merge(dst, src)
}
func (m *TaskParams) XXX_Size() int {
	return xxx_messageInfo_TaskParams.Size(m)
}
func (m *TaskParams) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskParams.DiscardUnknown(m)
}

var xxx_messageInfo_TaskParams proto.InternalMessageInfo

func (m *TaskParams) GetAlgo() Algorithm {
	if m != nil {
		return m.Algo
	}
	return Algorithm_LINEAR_REGRESSION_VL
}

func (m *TaskParams) GetTaskType() TaskType {
	if m != nil {
		return m.TaskType
	}
	return TaskType_LEARN
}

func (m *TaskParams) GetTrainParams() *TrainParams {
	if m != nil {
		return m.TrainParams
	}
	return nil
}

func (m *TaskParams) GetModelTaskID() string {
	if m != nil {
		return m.ModelTaskID
	}
	return ""
}

func (m *TaskParams) GetModelParams() *TrainModels {
	if m != nil {
		return m.ModelParams
	}
	return nil
}

func (m *TaskParams) GetEvalParams() *EvaluationParams {
	if m != nil {
		return m.EvalParams
	}
	return nil
}

func (m *TaskParams) GetLivalParams() *LiveEvaluationParams {
	if m != nil {
		return m.LivalParams
	}
	return nil
}

// EvaluationParams lists all the parameters for model evaluation
type EvaluationParams struct {
	Enable               bool           `protobuf:"varint,1,opt,name=enable" json:"enable,omitempty"`
	EvalRule             EvaluationRule `protobuf:"varint,2,opt,name=evalRule,enum=common.EvaluationRule" json:"evalRule,omitempty"`
	RandomSplit          *RandomSplit   `protobuf:"bytes,3,opt,name=randomSplit" json:"randomSplit,omitempty"`
	Cv                   *CrossVal      `protobuf:"bytes,4,opt,name=cv" json:"cv,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *EvaluationParams) Reset()         { *m = EvaluationParams{} }
func (m *EvaluationParams) String() string { return proto.CompactTextString(m) }
func (*EvaluationParams) ProtoMessage()    {}
func (*EvaluationParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_d12016c60a6e2fb7, []int{3}
}
func (m *EvaluationParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvaluationParams.Unmarshal(m, b)
}
func (m *EvaluationParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvaluationParams.Marshal(b, m, deterministic)
}
func (dst *EvaluationParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvaluationParams.Merge(dst, src)
}
func (m *EvaluationParams) XXX_Size() int {
	return xxx_messageInfo_EvaluationParams.Size(m)
}
func (m *EvaluationParams) XXX_DiscardUnknown() {
	xxx_messageInfo_EvaluationParams.DiscardUnknown(m)
}

var xxx_messageInfo_EvaluationParams proto.InternalMessageInfo

func (m *EvaluationParams) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

func (m *EvaluationParams) GetEvalRule() EvaluationRule {
	if m != nil {
		return m.EvalRule
	}
	return EvaluationRule_ErRandomSplit
}

func (m *EvaluationParams) GetRandomSplit() *RandomSplit {
	if m != nil {
		return m.RandomSplit
	}
	return nil
}

func (m *EvaluationParams) GetCv() *CrossVal {
	if m != nil {
		return m.Cv
	}
	return nil
}

// LiveEvaluationParams lists all the parameters for live model evaluation
type LiveEvaluationParams struct {
	Enable               bool         `protobuf:"varint,1,opt,name=enable" json:"enable,omitempty"`
	RandomSplit          *RandomSplit `protobuf:"bytes,2,opt,name=randomSplit" json:"randomSplit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *LiveEvaluationParams) Reset()         { *m = LiveEvaluationParams{} }
func (m *LiveEvaluationParams) String() string { return proto.CompactTextString(m) }
func (*LiveEvaluationParams) ProtoMessage()    {}
func (*LiveEvaluationParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_d12016c60a6e2fb7, []int{4}
}
func (m *LiveEvaluationParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LiveEvaluationParams.Unmarshal(m, b)
}
func (m *LiveEvaluationParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LiveEvaluationParams.Marshal(b, m, deterministic)
}
func (dst *LiveEvaluationParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiveEvaluationParams.Merge(dst, src)
}
func (m *LiveEvaluationParams) XXX_Size() int {
	return xxx_messageInfo_LiveEvaluationParams.Size(m)
}
func (m *LiveEvaluationParams) XXX_DiscardUnknown() {
	xxx_messageInfo_LiveEvaluationParams.DiscardUnknown(m)
}

var xxx_messageInfo_LiveEvaluationParams proto.InternalMessageInfo

func (m *LiveEvaluationParams) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

func (m *LiveEvaluationParams) GetRandomSplit() *RandomSplit {
	if m != nil {
		return m.RandomSplit
	}
	return nil
}

// RandomSplit defines the way to divide the dataset randomly by percentage
type RandomSplit struct {
	PercentLO            int32    `protobuf:"varint,1,opt,name=percentLO" json:"percentLO,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RandomSplit) Reset()         { *m = RandomSplit{} }
func (m *RandomSplit) String() string { return proto.CompactTextString(m) }
func (*RandomSplit) ProtoMessage()    {}
func (*RandomSplit) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_d12016c60a6e2fb7, []int{5}
}
func (m *RandomSplit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RandomSplit.Unmarshal(m, b)
}
func (m *RandomSplit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RandomSplit.Marshal(b, m, deterministic)
}
func (dst *RandomSplit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RandomSplit.Merge(dst, src)
}
func (m *RandomSplit) XXX_Size() int {
	return xxx_messageInfo_RandomSplit.Size(m)
}
func (m *RandomSplit) XXX_DiscardUnknown() {
	xxx_messageInfo_RandomSplit.DiscardUnknown(m)
}

var xxx_messageInfo_RandomSplit proto.InternalMessageInfo

func (m *RandomSplit) GetPercentLO() int32 {
	if m != nil {
		return m.PercentLO
	}
	return 0
}

// CrossVal lists all parameters required in Cross Validation
type CrossVal struct {
	Folds                int32    `protobuf:"varint,1,opt,name=folds" json:"folds,omitempty"`
	Shuffle              bool     `protobuf:"varint,2,opt,name=shuffle" json:"shuffle,omitempty"`
	Repeated             bool     `protobuf:"varint,3,opt,name=repeated" json:"repeated,omitempty"`
	RepeatTimes          int32    `protobuf:"varint,4,opt,name=repeatTimes" json:"repeatTimes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CrossVal) Reset()         { *m = CrossVal{} }
func (m *CrossVal) String() string { return proto.CompactTextString(m) }
func (*CrossVal) ProtoMessage()    {}
func (*CrossVal) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_d12016c60a6e2fb7, []int{6}
}
func (m *CrossVal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrossVal.Unmarshal(m, b)
}
func (m *CrossVal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrossVal.Marshal(b, m, deterministic)
}
func (dst *CrossVal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrossVal.Merge(dst, src)
}
func (m *CrossVal) XXX_Size() int {
	return xxx_messageInfo_CrossVal.Size(m)
}
func (m *CrossVal) XXX_DiscardUnknown() {
	xxx_messageInfo_CrossVal.DiscardUnknown(m)
}

var xxx_messageInfo_CrossVal proto.InternalMessageInfo

func (m *CrossVal) GetFolds() int32 {
	if m != nil {
		return m.Folds
	}
	return 0
}

func (m *CrossVal) GetShuffle() bool {
	if m != nil {
		return m.Shuffle
	}
	return false
}

func (m *CrossVal) GetRepeated() bool {
	if m != nil {
		return m.Repeated
	}
	return false
}

func (m *CrossVal) GetRepeatTimes() int32 {
	if m != nil {
		return m.RepeatTimes
	}
	return 0
}

// EvaluationMetricScores defines model evaluation results, covering all supported metrics
type EvaluationMetricScores struct {
	// Types that are valid to be assigned to Payload:
	//	*EvaluationMetricScores_BinaryClassCaseMetricScores
	//	*EvaluationMetricScores_RegressionCaseMetricScores
	Payload              isEvaluationMetricScores_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *EvaluationMetricScores) Reset()         { *m = EvaluationMetricScores{} }
func (m *EvaluationMetricScores) String() string { return proto.CompactTextString(m) }
func (*EvaluationMetricScores) ProtoMessage()    {}
func (*EvaluationMetricScores) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_d12016c60a6e2fb7, []int{7}
}
func (m *EvaluationMetricScores) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvaluationMetricScores.Unmarshal(m, b)
}
func (m *EvaluationMetricScores) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvaluationMetricScores.Marshal(b, m, deterministic)
}
func (dst *EvaluationMetricScores) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvaluationMetricScores.Merge(dst, src)
}
func (m *EvaluationMetricScores) XXX_Size() int {
	return xxx_messageInfo_EvaluationMetricScores.Size(m)
}
func (m *EvaluationMetricScores) XXX_DiscardUnknown() {
	xxx_messageInfo_EvaluationMetricScores.DiscardUnknown(m)
}

var xxx_messageInfo_EvaluationMetricScores proto.InternalMessageInfo

type isEvaluationMetricScores_Payload interface {
	isEvaluationMetricScores_Payload()
}

type EvaluationMetricScores_BinaryClassCaseMetricScores struct {
	BinaryClassCaseMetricScores *BinaryClassCaseMetricScores `protobuf:"bytes,1,opt,name=binaryClassCaseMetricScores,oneof"`
}
type EvaluationMetricScores_RegressionCaseMetricScores struct {
	RegressionCaseMetricScores *RegressionCaseMetricScores `protobuf:"bytes,2,opt,name=RegressionCaseMetricScores,oneof"`
}

func (*EvaluationMetricScores_BinaryClassCaseMetricScores) isEvaluationMetricScores_Payload() {}
func (*EvaluationMetricScores_RegressionCaseMetricScores) isEvaluationMetricScores_Payload()  {}

func (m *EvaluationMetricScores) GetPayload() isEvaluationMetricScores_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *EvaluationMetricScores) GetBinaryClassCaseMetricScores() *BinaryClassCaseMetricScores {
	if x, ok := m.GetPayload().(*EvaluationMetricScores_BinaryClassCaseMetricScores); ok {
		return x.BinaryClassCaseMetricScores
	}
	return nil
}

func (m *EvaluationMetricScores) GetRegressionCaseMetricScores() *RegressionCaseMetricScores {
	if x, ok := m.GetPayload().(*EvaluationMetricScores_RegressionCaseMetricScores); ok {
		return x.RegressionCaseMetricScores
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*EvaluationMetricScores) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _EvaluationMetricScores_OneofMarshaler, _EvaluationMetricScores_OneofUnmarshaler, _EvaluationMetricScores_OneofSizer, []interface{}{
		(*EvaluationMetricScores_BinaryClassCaseMetricScores)(nil),
		(*EvaluationMetricScores_RegressionCaseMetricScores)(nil),
	}
}

func _EvaluationMetricScores_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*EvaluationMetricScores)
	// payload
	switch x := m.Payload.(type) {
	case *EvaluationMetricScores_BinaryClassCaseMetricScores:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BinaryClassCaseMetricScores); err != nil {
			return err
		}
	case *EvaluationMetricScores_RegressionCaseMetricScores:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RegressionCaseMetricScores); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("EvaluationMetricScores.Payload has unexpected type %T", x)
	}
	return nil
}

func _EvaluationMetricScores_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*EvaluationMetricScores)
	switch tag {
	case 1: // payload.binaryClassCaseMetricScores
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BinaryClassCaseMetricScores)
		err := b.DecodeMessage(msg)
		m.Payload = &EvaluationMetricScores_BinaryClassCaseMetricScores{msg}
		return true, err
	case 2: // payload.RegressionCaseMetricScores
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RegressionCaseMetricScores)
		err := b.DecodeMessage(msg)
		m.Payload = &EvaluationMetricScores_RegressionCaseMetricScores{msg}
		return true, err
	default:
		return false, nil
	}
}

func _EvaluationMetricScores_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*EvaluationMetricScores)
	// payload
	switch x := m.Payload.(type) {
	case *EvaluationMetricScores_BinaryClassCaseMetricScores:
		s := proto.Size(x.BinaryClassCaseMetricScores)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *EvaluationMetricScores_RegressionCaseMetricScores:
		s := proto.Size(x.RegressionCaseMetricScores)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// BinaryClassCaseMetricScores contains the metric scores of binary classfication
type BinaryClassCaseMetricScores struct {
	CaseType             CaseType                                              `protobuf:"varint,1,opt,name=caseType,enum=common.CaseType" json:"caseType,omitempty"`
	AvgAccuracy          float64                                               `protobuf:"fixed64,2,opt,name=avgAccuracy" json:"avgAccuracy,omitempty"`
	AvgPrecision         float64                                               `protobuf:"fixed64,3,opt,name=avgPrecision" json:"avgPrecision,omitempty"`
	AvgRecall            float64                                               `protobuf:"fixed64,4,opt,name=avgRecall" json:"avgRecall,omitempty"`
	AvgF1Score           float64                                               `protobuf:"fixed64,5,opt,name=avgF1Score" json:"avgF1Score,omitempty"`
	AvgAUC               float64                                               `protobuf:"fixed64,6,opt,name=avgAUC" json:"avgAUC,omitempty"`
	MetricsPerFold       map[int32]*BinaryClassCaseMetricScores_MetricsPerFold `protobuf:"bytes,7,rep,name=metricsPerFold" json:"metricsPerFold,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}                                              `json:"-"`
	XXX_unrecognized     []byte                                                `json:"-"`
	XXX_sizecache        int32                                                 `json:"-"`
}

func (m *BinaryClassCaseMetricScores) Reset()         { *m = BinaryClassCaseMetricScores{} }
func (m *BinaryClassCaseMetricScores) String() string { return proto.CompactTextString(m) }
func (*BinaryClassCaseMetricScores) ProtoMessage()    {}
func (*BinaryClassCaseMetricScores) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_d12016c60a6e2fb7, []int{8}
}
func (m *BinaryClassCaseMetricScores) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BinaryClassCaseMetricScores.Unmarshal(m, b)
}
func (m *BinaryClassCaseMetricScores) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BinaryClassCaseMetricScores.Marshal(b, m, deterministic)
}
func (dst *BinaryClassCaseMetricScores) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BinaryClassCaseMetricScores.Merge(dst, src)
}
func (m *BinaryClassCaseMetricScores) XXX_Size() int {
	return xxx_messageInfo_BinaryClassCaseMetricScores.Size(m)
}
func (m *BinaryClassCaseMetricScores) XXX_DiscardUnknown() {
	xxx_messageInfo_BinaryClassCaseMetricScores.DiscardUnknown(m)
}

var xxx_messageInfo_BinaryClassCaseMetricScores proto.InternalMessageInfo

func (m *BinaryClassCaseMetricScores) GetCaseType() CaseType {
	if m != nil {
		return m.CaseType
	}
	return CaseType_Regression
}

func (m *BinaryClassCaseMetricScores) GetAvgAccuracy() float64 {
	if m != nil {
		return m.AvgAccuracy
	}
	return 0
}

func (m *BinaryClassCaseMetricScores) GetAvgPrecision() float64 {
	if m != nil {
		return m.AvgPrecision
	}
	return 0
}

func (m *BinaryClassCaseMetricScores) GetAvgRecall() float64 {
	if m != nil {
		return m.AvgRecall
	}
	return 0
}

func (m *BinaryClassCaseMetricScores) GetAvgF1Score() float64 {
	if m != nil {
		return m.AvgF1Score
	}
	return 0
}

func (m *BinaryClassCaseMetricScores) GetAvgAUC() float64 {
	if m != nil {
		return m.AvgAUC
	}
	return 0
}

func (m *BinaryClassCaseMetricScores) GetMetricsPerFold() map[int32]*BinaryClassCaseMetricScores_MetricsPerFold {
	if m != nil {
		return m.MetricsPerFold
	}
	return nil
}

type BinaryClassCaseMetricScores_Point struct {
	// A point on roc is represented by [3]float64, [FPR, TPR, threshold]([x,y,threshold])
	P                    []float64 `protobuf:"fixed64,1,rep,packed,name=p" json:"p,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *BinaryClassCaseMetricScores_Point) Reset()         { *m = BinaryClassCaseMetricScores_Point{} }
func (m *BinaryClassCaseMetricScores_Point) String() string { return proto.CompactTextString(m) }
func (*BinaryClassCaseMetricScores_Point) ProtoMessage()    {}
func (*BinaryClassCaseMetricScores_Point) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_d12016c60a6e2fb7, []int{8, 0}
}
func (m *BinaryClassCaseMetricScores_Point) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BinaryClassCaseMetricScores_Point.Unmarshal(m, b)
}
func (m *BinaryClassCaseMetricScores_Point) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BinaryClassCaseMetricScores_Point.Marshal(b, m, deterministic)
}
func (dst *BinaryClassCaseMetricScores_Point) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BinaryClassCaseMetricScores_Point.Merge(dst, src)
}
func (m *BinaryClassCaseMetricScores_Point) XXX_Size() int {
	return xxx_messageInfo_BinaryClassCaseMetricScores_Point.Size(m)
}
func (m *BinaryClassCaseMetricScores_Point) XXX_DiscardUnknown() {
	xxx_messageInfo_BinaryClassCaseMetricScores_Point.DiscardUnknown(m)
}

var xxx_messageInfo_BinaryClassCaseMetricScores_Point proto.InternalMessageInfo

func (m *BinaryClassCaseMetricScores_Point) GetP() []float64 {
	if m != nil {
		return m.P
	}
	return nil
}

type BinaryClassCaseMetricScores_MetricsPerFold struct {
	Accuracy             float64                              `protobuf:"fixed64,1,opt,name=accuracy" json:"accuracy,omitempty"`
	Precision            float64                              `protobuf:"fixed64,2,opt,name=precision" json:"precision,omitempty"`
	Recall               float64                              `protobuf:"fixed64,3,opt,name=recall" json:"recall,omitempty"`
	F1Score              float64                              `protobuf:"fixed64,4,opt,name=F1Score" json:"F1Score,omitempty"`
	AUC                  float64                              `protobuf:"fixed64,5,opt,name=AUC" json:"AUC,omitempty"`
	ROC                  []*BinaryClassCaseMetricScores_Point `protobuf:"bytes,6,rep,name=ROC" json:"ROC,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *BinaryClassCaseMetricScores_MetricsPerFold) Reset() {
	*m = BinaryClassCaseMetricScores_MetricsPerFold{}
}
func (m *BinaryClassCaseMetricScores_MetricsPerFold) String() string {
	return proto.CompactTextString(m)
}
func (*BinaryClassCaseMetricScores_MetricsPerFold) ProtoMessage() {}
func (*BinaryClassCaseMetricScores_MetricsPerFold) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_d12016c60a6e2fb7, []int{8, 1}
}
func (m *BinaryClassCaseMetricScores_MetricsPerFold) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BinaryClassCaseMetricScores_MetricsPerFold.Unmarshal(m, b)
}
func (m *BinaryClassCaseMetricScores_MetricsPerFold) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BinaryClassCaseMetricScores_MetricsPerFold.Marshal(b, m, deterministic)
}
func (dst *BinaryClassCaseMetricScores_MetricsPerFold) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BinaryClassCaseMetricScores_MetricsPerFold.Merge(dst, src)
}
func (m *BinaryClassCaseMetricScores_MetricsPerFold) XXX_Size() int {
	return xxx_messageInfo_BinaryClassCaseMetricScores_MetricsPerFold.Size(m)
}
func (m *BinaryClassCaseMetricScores_MetricsPerFold) XXX_DiscardUnknown() {
	xxx_messageInfo_BinaryClassCaseMetricScores_MetricsPerFold.DiscardUnknown(m)
}

var xxx_messageInfo_BinaryClassCaseMetricScores_MetricsPerFold proto.InternalMessageInfo

func (m *BinaryClassCaseMetricScores_MetricsPerFold) GetAccuracy() float64 {
	if m != nil {
		return m.Accuracy
	}
	return 0
}

func (m *BinaryClassCaseMetricScores_MetricsPerFold) GetPrecision() float64 {
	if m != nil {
		return m.Precision
	}
	return 0
}

func (m *BinaryClassCaseMetricScores_MetricsPerFold) GetRecall() float64 {
	if m != nil {
		return m.Recall
	}
	return 0
}

func (m *BinaryClassCaseMetricScores_MetricsPerFold) GetF1Score() float64 {
	if m != nil {
		return m.F1Score
	}
	return 0
}

func (m *BinaryClassCaseMetricScores_MetricsPerFold) GetAUC() float64 {
	if m != nil {
		return m.AUC
	}
	return 0
}

func (m *BinaryClassCaseMetricScores_MetricsPerFold) GetROC() []*BinaryClassCaseMetricScores_Point {
	if m != nil {
		return m.ROC
	}
	return nil
}

// RegressionCaseMetricScores contains the metric scores of regression
type RegressionCaseMetricScores struct {
	CaseType             CaseType          `protobuf:"varint,1,opt,name=caseType,enum=common.CaseType" json:"caseType,omitempty"`
	RMSEs                map[int32]float64 `protobuf:"bytes,2,rep,name=RMSEs" json:"RMSEs,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	MeanRMSE             float64           `protobuf:"fixed64,3,opt,name=meanRMSE" json:"meanRMSE,omitempty"`
	StdDevRMSE           float64           `protobuf:"fixed64,4,opt,name=stdDevRMSE" json:"stdDevRMSE,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RegressionCaseMetricScores) Reset()         { *m = RegressionCaseMetricScores{} }
func (m *RegressionCaseMetricScores) String() string { return proto.CompactTextString(m) }
func (*RegressionCaseMetricScores) ProtoMessage()    {}
func (*RegressionCaseMetricScores) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_d12016c60a6e2fb7, []int{9}
}
func (m *RegressionCaseMetricScores) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegressionCaseMetricScores.Unmarshal(m, b)
}
func (m *RegressionCaseMetricScores) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegressionCaseMetricScores.Marshal(b, m, deterministic)
}
func (dst *RegressionCaseMetricScores) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegressionCaseMetricScores.Merge(dst, src)
}
func (m *RegressionCaseMetricScores) XXX_Size() int {
	return xxx_messageInfo_RegressionCaseMetricScores.Size(m)
}
func (m *RegressionCaseMetricScores) XXX_DiscardUnknown() {
	xxx_messageInfo_RegressionCaseMetricScores.DiscardUnknown(m)
}

var xxx_messageInfo_RegressionCaseMetricScores proto.InternalMessageInfo

func (m *RegressionCaseMetricScores) GetCaseType() CaseType {
	if m != nil {
		return m.CaseType
	}
	return CaseType_Regression
}

func (m *RegressionCaseMetricScores) GetRMSEs() map[int32]float64 {
	if m != nil {
		return m.RMSEs
	}
	return nil
}

func (m *RegressionCaseMetricScores) GetMeanRMSE() float64 {
	if m != nil {
		return m.MeanRMSE
	}
	return 0
}

func (m *RegressionCaseMetricScores) GetStdDevRMSE() float64 {
	if m != nil {
		return m.StdDevRMSE
	}
	return 0
}

// TrainTaskResult defines final result of training
type TrainTaskResult struct {
	TaskID           string                  `protobuf:"bytes,1,opt,name=taskID" json:"taskID,omitempty"`
	Success          bool                    `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
	Model            []byte                  `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	ErrMsg           string                  `protobuf:"bytes,4,opt,name=errMsg" json:"errMsg,omitempty"`
	EvalMetricScores *EvaluationMetricScores `protobuf:"bytes,6,opt,name=evalMetricScores" json:"evalMetricScores,omitempty"`
	// trainSet is training set after Sample Alignment, and will be used in evaluation,
	// and it will be deleted from TrainTaskResult after evaluation
	TrainSet             []*TrainTaskResult_FileRow `protobuf:"bytes,5,rep,name=trainSet" json:"trainSet,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *TrainTaskResult) Reset()         { *m = TrainTaskResult{} }
func (m *TrainTaskResult) String() string { return proto.CompactTextString(m) }
func (*TrainTaskResult) ProtoMessage()    {}
func (*TrainTaskResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_d12016c60a6e2fb7, []int{10}
}
func (m *TrainTaskResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrainTaskResult.Unmarshal(m, b)
}
func (m *TrainTaskResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrainTaskResult.Marshal(b, m, deterministic)
}
func (dst *TrainTaskResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrainTaskResult.Merge(dst, src)
}
func (m *TrainTaskResult) XXX_Size() int {
	return xxx_messageInfo_TrainTaskResult.Size(m)
}
func (m *TrainTaskResult) XXX_DiscardUnknown() {
	xxx_messageInfo_TrainTaskResult.DiscardUnknown(m)
}

var xxx_messageInfo_TrainTaskResult proto.InternalMessageInfo

func (m *TrainTaskResult) GetTaskID() string {
	if m != nil {
		return m.TaskID
	}
	return ""
}

func (m *TrainTaskResult) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *TrainTaskResult) GetModel() []byte {
	if m != nil {
		return m.Model
	}
	return nil
}

func (m *TrainTaskResult) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *TrainTaskResult) GetEvalMetricScores() *EvaluationMetricScores {
	if m != nil {
		return m.EvalMetricScores
	}
	return nil
}

func (m *TrainTaskResult) GetTrainSet() []*TrainTaskResult_FileRow {
	if m != nil {
		return m.TrainSet
	}
	return nil
}

type TrainTaskResult_FileRow struct {
	Row                  []string `protobuf:"bytes,1,rep,name=row" json:"row,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrainTaskResult_FileRow) Reset()         { *m = TrainTaskResult_FileRow{} }
func (m *TrainTaskResult_FileRow) String() string { return proto.CompactTextString(m) }
func (*TrainTaskResult_FileRow) ProtoMessage()    {}
func (*TrainTaskResult_FileRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_d12016c60a6e2fb7, []int{10, 0}
}
func (m *TrainTaskResult_FileRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrainTaskResult_FileRow.Unmarshal(m, b)
}
func (m *TrainTaskResult_FileRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrainTaskResult_FileRow.Marshal(b, m, deterministic)
}
func (dst *TrainTaskResult_FileRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrainTaskResult_FileRow.Merge(dst, src)
}
func (m *TrainTaskResult_FileRow) XXX_Size() int {
	return xxx_messageInfo_TrainTaskResult_FileRow.Size(m)
}
func (m *TrainTaskResult_FileRow) XXX_DiscardUnknown() {
	xxx_messageInfo_TrainTaskResult_FileRow.DiscardUnknown(m)
}

var xxx_messageInfo_TrainTaskResult_FileRow proto.InternalMessageInfo

func (m *TrainTaskResult_FileRow) GetRow() []string {
	if m != nil {
		return m.Row
	}
	return nil
}

// PredictTaskResult defines final result of prediction
type PredictTaskResult struct {
	TaskID               string   `protobuf:"bytes,1,opt,name=taskID" json:"taskID,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
	Outcomes             []byte   `protobuf:"bytes,3,opt,name=outcomes,proto3" json:"outcomes,omitempty"`
	ErrMsg               string   `protobuf:"bytes,4,opt,name=errMsg" json:"errMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PredictTaskResult) Reset()         { *m = PredictTaskResult{} }
func (m *PredictTaskResult) String() string { return proto.CompactTextString(m) }
func (*PredictTaskResult) ProtoMessage()    {}
func (*PredictTaskResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_d12016c60a6e2fb7, []int{11}
}
func (m *PredictTaskResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PredictTaskResult.Unmarshal(m, b)
}
func (m *PredictTaskResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PredictTaskResult.Marshal(b, m, deterministic)
}
func (dst *PredictTaskResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PredictTaskResult.Merge(dst, src)
}
func (m *PredictTaskResult) XXX_Size() int {
	return xxx_messageInfo_PredictTaskResult.Size(m)
}
func (m *PredictTaskResult) XXX_DiscardUnknown() {
	xxx_messageInfo_PredictTaskResult.DiscardUnknown(m)
}

var xxx_messageInfo_PredictTaskResult proto.InternalMessageInfo

func (m *PredictTaskResult) GetTaskID() string {
	if m != nil {
		return m.TaskID
	}
	return ""
}

func (m *PredictTaskResult) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *PredictTaskResult) GetOutcomes() []byte {
	if m != nil {
		return m.Outcomes
	}
	return nil
}

func (m *PredictTaskResult) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

// StartTaskRequest is message sent to a cluster member to start a training task or predicting task.
type StartTaskRequest struct {
	TaskID               string          `protobuf:"bytes,2,opt,name=taskID" json:"taskID,omitempty"`
	File                 []byte          `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
	Hosts                []string        `protobuf:"bytes,4,rep,name=hosts" json:"hosts,omitempty"`
	Params               *TaskParams     `protobuf:"bytes,5,opt,name=params" json:"params,omitempty"`
	PaddleFLParams       *PaddleFLParams `protobuf:"bytes,6,opt,name=paddleFLParams" json:"paddleFLParams,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StartTaskRequest) Reset()         { *m = StartTaskRequest{} }
func (m *StartTaskRequest) String() string { return proto.CompactTextString(m) }
func (*StartTaskRequest) ProtoMessage()    {}
func (*StartTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_d12016c60a6e2fb7, []int{12}
}
func (m *StartTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartTaskRequest.Unmarshal(m, b)
}
func (m *StartTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartTaskRequest.Marshal(b, m, deterministic)
}
func (dst *StartTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartTaskRequest.Merge(dst, src)
}
func (m *StartTaskRequest) XXX_Size() int {
	return xxx_messageInfo_StartTaskRequest.Size(m)
}
func (m *StartTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartTaskRequest proto.InternalMessageInfo

func (m *StartTaskRequest) GetTaskID() string {
	if m != nil {
		return m.TaskID
	}
	return ""
}

func (m *StartTaskRequest) GetFile() []byte {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *StartTaskRequest) GetHosts() []string {
	if m != nil {
		return m.Hosts
	}
	return nil
}

func (m *StartTaskRequest) GetParams() *TaskParams {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *StartTaskRequest) GetPaddleFLParams() *PaddleFLParams {
	if m != nil {
		return m.PaddleFLParams
	}
	return nil
}

// PaddleFLParams defines node's role and mpc network using paddlefl.
type PaddleFLParams struct {
	Role                 int32    `protobuf:"varint,1,opt,name=role" json:"role,omitempty"`
	Nodes                []string `protobuf:"bytes,2,rep,name=nodes" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaddleFLParams) Reset()         { *m = PaddleFLParams{} }
func (m *PaddleFLParams) String() string { return proto.CompactTextString(m) }
func (*PaddleFLParams) ProtoMessage()    {}
func (*PaddleFLParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_d12016c60a6e2fb7, []int{13}
}
func (m *PaddleFLParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaddleFLParams.Unmarshal(m, b)
}
func (m *PaddleFLParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaddleFLParams.Marshal(b, m, deterministic)
}
func (dst *PaddleFLParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaddleFLParams.Merge(dst, src)
}
func (m *PaddleFLParams) XXX_Size() int {
	return xxx_messageInfo_PaddleFLParams.Size(m)
}
func (m *PaddleFLParams) XXX_DiscardUnknown() {
	xxx_messageInfo_PaddleFLParams.DiscardUnknown(m)
}

var xxx_messageInfo_PaddleFLParams proto.InternalMessageInfo

func (m *PaddleFLParams) GetRole() int32 {
	if m != nil {
		return m.Role
	}
	return 0
}

func (m *PaddleFLParams) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

// StopTaskRequest is message sent to a cluster member to stop a training task or predicting task.
type StopTaskRequest struct {
	TaskID               string      `protobuf:"bytes,2,opt,name=taskID" json:"taskID,omitempty"`
	Params               *TaskParams `protobuf:"bytes,4,opt,name=params" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *StopTaskRequest) Reset()         { *m = StopTaskRequest{} }
func (m *StopTaskRequest) String() string { return proto.CompactTextString(m) }
func (*StopTaskRequest) ProtoMessage()    {}
func (*StopTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_d12016c60a6e2fb7, []int{14}
}
func (m *StopTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopTaskRequest.Unmarshal(m, b)
}
func (m *StopTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopTaskRequest.Marshal(b, m, deterministic)
}
func (dst *StopTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopTaskRequest.Merge(dst, src)
}
func (m *StopTaskRequest) XXX_Size() int {
	return xxx_messageInfo_StopTaskRequest.Size(m)
}
func (m *StopTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopTaskRequest proto.InternalMessageInfo

func (m *StopTaskRequest) GetTaskID() string {
	if m != nil {
		return m.TaskID
	}
	return ""
}

func (m *StopTaskRequest) GetParams() *TaskParams {
	if m != nil {
		return m.Params
	}
	return nil
}

func init() {
	proto.RegisterType((*TrainParams)(nil), "common.TrainParams")
	proto.RegisterType((*TrainModels)(nil), "common.TrainModels")
	proto.RegisterMapType((map[string]float64)(nil), "common.TrainModels.SigmasEntry")
	proto.RegisterMapType((map[string]float64)(nil), "common.TrainModels.ThetasEntry")
	proto.RegisterMapType((map[string]float64)(nil), "common.TrainModels.XbarsEntry")
	proto.RegisterType((*TaskParams)(nil), "common.TaskParams")
	proto.RegisterType((*EvaluationParams)(nil), "common.EvaluationParams")
	proto.RegisterType((*LiveEvaluationParams)(nil), "common.LiveEvaluationParams")
	proto.RegisterType((*RandomSplit)(nil), "common.RandomSplit")
	proto.RegisterType((*CrossVal)(nil), "common.CrossVal")
	proto.RegisterType((*EvaluationMetricScores)(nil), "common.EvaluationMetricScores")
	proto.RegisterType((*BinaryClassCaseMetricScores)(nil), "common.BinaryClassCaseMetricScores")
	proto.RegisterMapType((map[int32]*BinaryClassCaseMetricScores_MetricsPerFold)(nil), "common.BinaryClassCaseMetricScores.MetricsPerFoldEntry")
	proto.RegisterType((*BinaryClassCaseMetricScores_Point)(nil), "common.BinaryClassCaseMetricScores.Point")
	proto.RegisterType((*BinaryClassCaseMetricScores_MetricsPerFold)(nil), "common.BinaryClassCaseMetricScores.MetricsPerFold")
	proto.RegisterType((*RegressionCaseMetricScores)(nil), "common.RegressionCaseMetricScores")
	proto.RegisterMapType((map[int32]float64)(nil), "common.RegressionCaseMetricScores.RMSEsEntry")
	proto.RegisterType((*TrainTaskResult)(nil), "common.TrainTaskResult")
	proto.RegisterType((*TrainTaskResult_FileRow)(nil), "common.TrainTaskResult.FileRow")
	proto.RegisterType((*PredictTaskResult)(nil), "common.PredictTaskResult")
	proto.RegisterType((*StartTaskRequest)(nil), "common.StartTaskRequest")
	proto.RegisterType((*PaddleFLParams)(nil), "common.PaddleFLParams")
	proto.RegisterType((*StopTaskRequest)(nil), "common.StopTaskRequest")
	proto.RegisterEnum("common.Algorithm", Algorithm_name, Algorithm_value)
	proto.RegisterEnum("common.TaskType", TaskType_name, TaskType_value)
	proto.RegisterEnum("common.RegMode", RegMode_name, RegMode_value)
	proto.RegisterEnum("common.EvaluationRule", EvaluationRule_name, EvaluationRule_value)
	proto.RegisterEnum("common.CaseType", CaseType_name, CaseType_value)
}

func init() { proto.RegisterFile("common/common.proto", fileDescriptor_common_d12016c60a6e2fb7) }

var fileDescriptor_common_d12016c60a6e2fb7 = []byte{
	// 1497 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x57, 0xcd, 0x6e, 0xdb, 0xc6,
	0x13, 0x37, 0x65, 0xeb, 0x6b, 0xe4, 0xc8, 0xcc, 0x3a, 0xff, 0xfc, 0x09, 0x25, 0x48, 0x05, 0x16,
	0x05, 0x1c, 0xa7, 0xb5, 0x51, 0xa5, 0x41, 0xbe, 0x80, 0x00, 0xb6, 0x2c, 0x27, 0x2e, 0x64, 0x5b,
	0x58, 0x29, 0x41, 0xd0, 0x8b, 0xb1, 0x26, 0xd7, 0x14, 0x11, 0x4a, 0x54, 0xb9, 0x94, 0x12, 0xf7,
	0xde, 0x67, 0xe8, 0x0b, 0xf4, 0xd8, 0x7b, 0xaf, 0xbd, 0xf4, 0xd4, 0x47, 0xe9, 0xad, 0x4f, 0x50,
	0xcc, 0xee, 0xf2, 0x43, 0xfe, 0x8a, 0x8d, 0x5e, 0xec, 0xfd, 0xcd, 0xce, 0xec, 0xcc, 0xfc, 0x66,
	0xb9, 0x33, 0x82, 0x55, 0x27, 0x1c, 0x8d, 0xc2, 0xf1, 0xa6, 0xfa, 0xb7, 0x31, 0x89, 0xc2, 0x38,
	0x24, 0x25, 0x85, 0xec, 0xdf, 0x0a, 0x50, 0x1b, 0x44, 0xcc, 0x1f, 0xf7, 0x58, 0xc4, 0x46, 0x82,
	0xdc, 0x81, 0x62, 0xc0, 0x8e, 0x79, 0x60, 0x19, 0x4d, 0x63, 0xad, 0x4a, 0x15, 0x20, 0xf7, 0xa1,
	0x2a, 0x17, 0x07, 0x6c, 0xc4, 0xad, 0x82, 0xdc, 0xc9, 0x04, 0xe4, 0x21, 0x94, 0x23, 0xee, 0xed,
	0x87, 0x2e, 0xb7, 0x16, 0x9b, 0xc6, 0x5a, 0xbd, 0xb5, 0xb2, 0xa1, 0x7d, 0x51, 0x25, 0xa6, 0xc9,
	0x3e, 0x69, 0x40, 0x25, 0xe2, 0x9e, 0xf4, 0x65, 0x2d, 0x35, 0x8d, 0x35, 0x83, 0xa6, 0x18, 0x5d,
	0xb3, 0x60, 0x32, 0x64, 0x56, 0x51, 0x6e, 0x28, 0x80, 0xae, 0xd9, 0x68, 0x12, 0xf8, 0xf1, 0xd4,
	0xe5, 0x56, 0x49, 0xee, 0x64, 0x02, 0x3c, 0x8f, 0x39, 0xce, 0x34, 0x62, 0xce, 0xa9, 0x55, 0x6e,
	0x1a, 0x6b, 0x8b, 0x34, 0xc5, 0x68, 0xe9, 0x8b, 0x01, 0xc3, 0xd3, 0x63, 0xab, 0xd2, 0x34, 0xd6,
	0x2a, 0x34, 0x13, 0x90, 0xbb, 0x50, 0xf2, 0x5d, 0x99, 0x4f, 0x55, 0xe6, 0xa3, 0x11, 0x5a, 0x6d,
	0xb3, 0xd8, 0x19, 0xf6, 0xfd, 0x9f, 0xb8, 0x05, 0xf2, 0xc8, 0x4c, 0x60, 0xff, 0xb9, 0xa8, 0xe9,
	0xc2, 0x6c, 0x02, 0x41, 0x9e, 0x42, 0x29, 0x1e, 0xf2, 0x98, 0x09, 0xcb, 0x68, 0x2e, 0xae, 0xd5,
	0x5a, 0x5f, 0x24, 0x99, 0xe7, 0x94, 0x36, 0x06, 0x52, 0xa3, 0x33, 0x8e, 0xa3, 0x53, 0xaa, 0xd5,
	0xc9, 0x77, 0x50, 0xfc, 0x74, 0xcc, 0x22, 0x61, 0x15, 0xa4, 0xdd, 0x83, 0x8b, 0xec, 0xde, 0xa3,
	0x82, 0x32, 0x53, 0xca, 0xe8, 0x4e, 0xf8, 0xde, 0x88, 0x09, 0x6b, 0xf1, 0x72, 0x77, 0x7d, 0xa9,
	0xa1, 0xdd, 0x29, 0xf5, 0xac, 0xac, 0x4b, 0x67, 0xca, 0x9a, 0x31, 0x54, 0xbc, 0x9c, 0xa1, 0xd2,
	0x1c, 0x43, 0x04, 0x96, 0x26, 0x2c, 0x1e, 0x4a, 0xbe, 0xab, 0x54, 0xae, 0x1b, 0xcf, 0xa1, 0x96,
	0xcb, 0x92, 0x98, 0xb0, 0xf8, 0x81, 0x9f, 0xea, 0x3b, 0x84, 0x4b, 0x0c, 0x60, 0xc6, 0x82, 0xa9,
	0xba, 0x3d, 0x06, 0x55, 0xe0, 0x45, 0xe1, 0x99, 0xd1, 0x78, 0x06, 0x90, 0x25, 0x7a, 0x23, 0xcb,
	0xe7, 0x50, 0xcb, 0xe5, 0x7a, 0x13, 0x53, 0xfb, 0xef, 0x02, 0xc0, 0x80, 0x89, 0x0f, 0xfa, 0xd6,
	0x7f, 0x05, 0x4b, 0x2c, 0xf0, 0x42, 0x69, 0x5b, 0x6f, 0xdd, 0x4e, 0x58, 0xdd, 0x0a, 0xbc, 0x30,
	0xf2, 0xe3, 0xe1, 0x88, 0xca, 0x6d, 0xf2, 0x35, 0x54, 0x62, 0x26, 0x3e, 0x0c, 0x4e, 0x27, 0xea,
	0xc8, 0x7a, 0xcb, 0x4c, 0x0b, 0xa0, 0xe5, 0x34, 0xd5, 0x20, 0x4f, 0xa0, 0x16, 0x67, 0x5f, 0x96,
	0xfc, 0x34, 0x6a, 0xad, 0xd5, 0xb9, 0x8a, 0xa9, 0x2d, 0x9a, 0xd7, 0x23, 0x4d, 0xa8, 0x8d, 0xb0,
	0x90, 0x78, 0xe2, 0xde, 0x8e, 0x2e, 0x58, 0x5e, 0x84, 0x07, 0x4b, 0xa8, 0x0f, 0x2e, 0x5e, 0x70,
	0xb0, 0xba, 0x0a, 0x34, 0xaf, 0x47, 0x9e, 0x01, 0xf0, 0x19, 0x4b, 0xac, 0x4a, 0xd2, 0xca, 0x4a,
	0xac, 0x3a, 0xc8, 0x0d, 0x8b, 0xfd, 0x30, 0x89, 0x29, 0xa7, 0x4b, 0x5e, 0x41, 0x2d, 0xf0, 0x33,
	0xd3, 0xb2, 0x34, 0xbd, 0x9f, 0x98, 0x76, 0xfd, 0x19, 0x3f, 0x67, 0x9e, 0x37, 0xb0, 0x7f, 0x37,
	0xc0, 0x3c, 0xab, 0x81, 0xd7, 0x8b, 0x8f, 0xd9, 0x71, 0xc0, 0x25, 0xeb, 0x15, 0xaa, 0x11, 0x69,
	0x41, 0x05, 0x5d, 0xd3, 0x69, 0x90, 0x90, 0x7c, 0xf7, 0x7c, 0x90, 0xb8, 0x4b, 0x53, 0x3d, 0x64,
	0x24, 0x62, 0x63, 0x37, 0x1c, 0xf5, 0xf1, 0x61, 0x38, 0x4b, 0x35, 0xcd, 0xb6, 0x68, 0x5e, 0x8f,
	0x34, 0xa1, 0xe0, 0xcc, 0x24, 0xc3, 0xb5, 0xac, 0x92, 0xed, 0x28, 0x14, 0xe2, 0x1d, 0x0b, 0x68,
	0xc1, 0x99, 0xd9, 0x1c, 0xee, 0x5c, 0x94, 0xde, 0xa5, 0xc1, 0x9f, 0x09, 0xa4, 0x70, 0xbd, 0x40,
	0xec, 0x47, 0x50, 0xcb, 0xed, 0xe1, 0x77, 0x39, 0xe1, 0x91, 0xc3, 0xc7, 0x71, 0xf7, 0x50, 0x3a,
	0x28, 0xd2, 0x4c, 0x60, 0x7f, 0x82, 0x4a, 0x12, 0x23, 0xde, 0xf0, 0x93, 0x30, 0x70, 0x85, 0xd6,
	0x52, 0x80, 0x58, 0x50, 0x16, 0xc3, 0xe9, 0xc9, 0x89, 0x66, 0xb0, 0x42, 0x13, 0xa8, 0xde, 0xdf,
	0x09, 0x67, 0x31, 0x77, 0x25, 0x4b, 0x15, 0x9a, 0x62, 0xbc, 0x78, 0x6a, 0x3d, 0xf0, 0x47, 0x5c,
	0x48, 0x5a, 0x8a, 0x34, 0x2f, 0xb2, 0xff, 0x31, 0xe0, 0x6e, 0x46, 0xc5, 0x3e, 0x8f, 0x23, 0xdf,
	0xe9, 0x3b, 0x61, 0xc4, 0x05, 0xf1, 0xe0, 0xde, 0xb1, 0x3f, 0x66, 0xd1, 0x69, 0x3b, 0x60, 0x42,
	0xb4, 0x99, 0xe0, 0xf9, 0x6d, 0x19, 0x5e, 0xad, 0xf5, 0x65, 0x42, 0xc4, 0xf6, 0xe5, 0xaa, 0x6f,
	0x16, 0xe8, 0x55, 0x27, 0x11, 0x17, 0x1a, 0x94, 0x7b, 0x11, 0x17, 0xc2, 0x0f, 0xc7, 0xe7, 0xfc,
	0x28, 0xc2, 0xed, 0x5c, 0xff, 0xb9, 0x44, 0xf3, 0xcd, 0x02, 0xbd, 0xe2, 0x9c, 0xed, 0x2a, 0x94,
	0x27, 0xec, 0x34, 0x08, 0x99, 0x6b, 0xff, 0x5a, 0x84, 0x7b, 0x57, 0xc4, 0x8b, 0x8f, 0x82, 0xc3,
	0x04, 0x97, 0x8f, 0x82, 0x31, 0xff, 0x28, 0xb4, 0xb5, 0x9c, 0xa6, 0x1a, 0x48, 0x32, 0x9b, 0x79,
	0x5b, 0x49, 0xcf, 0x52, 0x0f, 0x53, 0x5e, 0x44, 0x6c, 0x58, 0x66, 0x33, 0xaf, 0x17, 0x71, 0xc7,
	0xc7, 0xd0, 0x64, 0x99, 0x0c, 0x3a, 0x27, 0x93, 0x4d, 0x71, 0xe6, 0x51, 0xee, 0xb0, 0x20, 0xd0,
	0x7d, 0x34, 0x13, 0x90, 0x07, 0x00, 0x6c, 0xe6, 0xed, 0x7e, 0x2b, 0x03, 0xd4, 0xdd, 0x34, 0x27,
	0xc1, 0xcb, 0x8b, 0x0e, 0xdf, 0xb6, 0x75, 0x3f, 0xd5, 0x88, 0x1c, 0x41, 0x7d, 0x24, 0x33, 0x13,
	0x3d, 0x1e, 0xed, 0x86, 0x81, 0x6b, 0x95, 0x65, 0x97, 0x79, 0x7a, 0x8d, 0xb2, 0x6d, 0xec, 0xcf,
	0x59, 0xaa, 0xee, 0x73, 0xe6, 0xb8, 0xc6, 0xff, 0xa0, 0xd8, 0x0b, 0xfd, 0x71, 0x4c, 0x96, 0xc1,
	0x98, 0xc8, 0x8e, 0x69, 0x50, 0x63, 0xd2, 0xf8, 0xcb, 0x80, 0xfa, 0xbc, 0xf9, 0x5c, 0x5f, 0x37,
	0xd4, 0x9c, 0x90, 0xef, 0xeb, 0x93, 0x94, 0x1d, 0x45, 0x60, 0x26, 0xc0, 0xe4, 0x22, 0xc5, 0x8b,
	0x22, 0x4e, 0x23, 0xfc, 0x26, 0x12, 0x46, 0x14, 0x61, 0x09, 0xc4, 0xbe, 0x81, 0x5c, 0x28, 0x9e,
	0x70, 0x49, 0x5e, 0xc2, 0x22, 0x3d, 0x44, 0x76, 0x30, 0xfb, 0x87, 0xd7, 0xc9, 0x5e, 0xa6, 0x45,
	0xd1, 0xaa, 0x31, 0x85, 0xd5, 0x0b, 0xb8, 0xc8, 0x77, 0xa7, 0xa2, 0xea, 0x4e, 0x6f, 0xf2, 0xdd,
	0xa9, 0xd6, 0x6a, 0xdd, 0x9c, 0xe5, 0x7c, 0x47, 0xfb, 0xb9, 0x70, 0xd5, 0x87, 0x71, 0xc3, 0x5b,
	0xda, 0x86, 0x22, 0xdd, 0xef, 0x77, 0x92, 0xe9, 0xe4, 0x9b, 0xcf, 0x7f, 0x4f, 0x1b, 0x52, 0x5f,
	0x0f, 0x2b, 0x72, 0x8d, 0x35, 0x1c, 0x71, 0x36, 0x46, 0xa0, 0x6b, 0x91, 0x62, 0xbc, 0xa2, 0x22,
	0x76, 0x77, 0xf8, 0x4c, 0xee, 0xaa, 0x82, 0xe4, 0x24, 0x38, 0x14, 0x64, 0x07, 0x5e, 0xc0, 0xdd,
	0xe5, 0x9d, 0xfd, 0x97, 0x02, 0xac, 0xc8, 0x16, 0x88, 0xcd, 0x92, 0x72, 0x31, 0x0d, 0xe4, 0x24,
	0x13, 0xab, 0x6e, 0xaa, 0x86, 0x03, 0x8d, 0xe4, 0x3b, 0x39, 0x75, 0x1c, 0x2e, 0x44, 0xfa, 0x4e,
	0x2a, 0x88, 0xe7, 0xcb, 0xd6, 0x29, 0x03, 0x5f, 0xa6, 0x0a, 0xc8, 0x57, 0x3f, 0x8a, 0xf6, 0x85,
	0xa7, 0xbb, 0xb2, 0x46, 0xe4, 0x7b, 0x30, 0xb1, 0x15, 0xcd, 0xbd, 0x44, 0xaa, 0xbf, 0x3e, 0x38,
	0xdf, 0xba, 0xf2, 0x5a, 0xf4, 0x9c, 0x1d, 0x79, 0x09, 0x15, 0x39, 0x0d, 0xf4, 0x39, 0x8e, 0x64,
	0xe7, 0x87, 0xbc, 0x2c, 0xad, 0x8d, 0x5d, 0x3f, 0xe0, 0x34, 0xfc, 0x48, 0x53, 0x83, 0xc6, 0x3d,
	0x28, 0x6b, 0x21, 0x72, 0x16, 0x85, 0x1f, 0xe5, 0x47, 0x56, 0xa5, 0xb8, 0xb4, 0x4f, 0xe1, 0x76,
	0x2f, 0xe2, 0xae, 0xef, 0xc4, 0xff, 0x89, 0x9a, 0x06, 0x54, 0xc2, 0x69, 0xec, 0x84, 0xd8, 0x23,
	0x14, 0x3b, 0x29, 0xbe, 0x8c, 0x20, 0xfb, 0x0f, 0x03, 0xcc, 0x7e, 0xcc, 0x22, 0xed, 0xf9, 0xc7,
	0x29, 0x17, 0x79, 0xd7, 0x85, 0x39, 0xd7, 0x04, 0x96, 0x4e, 0xfc, 0x80, 0xeb, 0xc3, 0xe5, 0x1a,
	0xeb, 0x31, 0x0c, 0x45, 0x8c, 0x5d, 0x09, 0xf3, 0x51, 0x80, 0xac, 0x43, 0x69, 0x92, 0x9f, 0x81,
	0x48, 0x7e, 0x1a, 0xd3, 0x83, 0x88, 0xd6, 0x20, 0xaf, 0xa0, 0x3e, 0x61, 0xae, 0x1b, 0xf0, 0xdd,
	0xee, 0xdc, 0x04, 0x94, 0x0e, 0x17, 0xbd, 0xb9, 0x5d, 0x7a, 0x46, 0xdb, 0x7e, 0x01, 0xf5, 0x79,
	0x0d, 0x8c, 0x33, 0x0a, 0xf5, 0x04, 0x50, 0xa4, 0x72, 0x8d, 0x71, 0x8e, 0x43, 0x97, 0xab, 0x0f,
	0xa7, 0x4a, 0x15, 0xb0, 0xdf, 0xc2, 0x4a, 0x3f, 0x0e, 0x27, 0xd7, 0x49, 0x3e, 0x4b, 0x69, 0xe9,
	0x73, 0x29, 0xad, 0xf7, 0xa1, 0x9a, 0x4e, 0xa8, 0xc4, 0x82, 0x3b, 0xdd, 0xbd, 0x83, 0xce, 0x16,
	0x3d, 0xa2, 0x9d, 0xd7, 0xb4, 0xd3, 0xef, 0xef, 0x1d, 0x1e, 0x1c, 0xbd, 0xeb, 0x9a, 0x0b, 0xe4,
	0xff, 0xb0, 0xda, 0x3d, 0x7c, 0xbd, 0xd7, 0x3e, 0xb3, 0x61, 0x90, 0x55, 0x58, 0xd9, 0x39, 0x38,
	0x38, 0xea, 0x6d, 0xed, 0xec, 0x74, 0x3b, 0xbb, 0x5d, 0x14, 0x16, 0xd6, 0x6d, 0xa8, 0x24, 0xb3,
	0x2c, 0xa9, 0x42, 0xb1, 0xdb, 0xd9, 0xa2, 0x07, 0xe6, 0x02, 0xa9, 0x41, 0xb9, 0x47, 0x3b, 0x3b,
	0x7b, 0xed, 0x81, 0x69, 0xac, 0x3f, 0x81, 0xb2, 0xfe, 0x65, 0x47, 0x96, 0xa1, 0x42, 0xb9, 0x77,
	0x74, 0x10, 0x8e, 0xb9, 0xb9, 0x40, 0x6e, 0x41, 0x15, 0x51, 0x97, 0x09, 0x11, 0x9a, 0x46, 0x02,
	0xa9, 0xef, 0x7a, 0xdc, 0x2c, 0xac, 0xbf, 0x82, 0xfa, 0xfc, 0x04, 0x47, 0x6e, 0xc3, 0xad, 0x4e,
	0x94, 0x9b, 0x7c, 0xcc, 0x05, 0x52, 0x07, 0xe8, 0x44, 0xc9, 0x7c, 0x63, 0x1a, 0x18, 0x43, 0x27,
	0xea, 0x1e, 0x1e, 0x9a, 0x85, 0xf5, 0x47, 0x50, 0x49, 0xde, 0x2a, 0x54, 0xcb, 0x1e, 0x23, 0x73,
	0x81, 0xac, 0x40, 0x2d, 0xf7, 0x6e, 0x9a, 0xc6, 0xf6, 0x93, 0x1f, 0x1e, 0x7b, 0x7e, 0x3c, 0x9c,
	0x1e, 0x23, 0x81, 0x9b, 0xaa, 0x74, 0xea, 0xaf, 0x06, 0x3b, 0x83, 0xf7, 0x9b, 0x2e, 0xf3, 0x37,
	0xe5, 0xef, 0x61, 0xa1, 0x7f, 0x1d, 0x1f, 0x97, 0x24, 0x7c, 0xfc, 0x6f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x2a, 0xdb, 0x41, 0x00, 0x35, 0x0f, 0x00, 0x00,
}
