// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpc/learners/logic_reg_vl/logic_reg_vl.proto

package logic_reg_vl

import (
	fmt "fmt"
	mpc "github.com/PaddlePaddle/PaddleDTX/dai/protos/mpc"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//MessageType defines the type of message with which communicate with nodes in cluster,
// and in some way it indicates the phase of learning
//Some types are for local message which is not passed between nodes
type MessageType int32

const (
	MessageType_MsgPsiEnc                MessageType = 0
	MessageType_MsgPsiAskReEnc           MessageType = 1
	MessageType_MsgPsiReEnc              MessageType = 2
	MessageType_MsgPsiIntersect          MessageType = 3
	MessageType_MsgTrainHup              MessageType = 4
	MessageType_MsgHomoPubkey            MessageType = 5
	MessageType_MsgTrainLoop             MessageType = 6
	MessageType_MsgTrainCalLocalGradCost MessageType = 7
	MessageType_MsgTrainPartBytes        MessageType = 8
	MessageType_MsgTrainCalEncGradCost   MessageType = 9
	MessageType_MsgTrainEncGradCost      MessageType = 10
	MessageType_MsgTrainDecLocalGradCost MessageType = 11
	MessageType_MsgTrainGradAndCost      MessageType = 12
	MessageType_MsgTrainUpdCostGrad      MessageType = 13
	MessageType_MsgTrainStatus           MessageType = 14
	MessageType_MsgTrainCheckStatus      MessageType = 15
	MessageType_MsgTrainModels           MessageType = 16
	MessageType_MsgPredictHup            MessageType = 17
	MessageType_MsgPredictPart           MessageType = 18
	MessageType_MsgPredictFinal          MessageType = 19
)

var MessageType_name = map[int32]string{
	0:  "MsgPsiEnc",
	1:  "MsgPsiAskReEnc",
	2:  "MsgPsiReEnc",
	3:  "MsgPsiIntersect",
	4:  "MsgTrainHup",
	5:  "MsgHomoPubkey",
	6:  "MsgTrainLoop",
	7:  "MsgTrainCalLocalGradCost",
	8:  "MsgTrainPartBytes",
	9:  "MsgTrainCalEncGradCost",
	10: "MsgTrainEncGradCost",
	11: "MsgTrainDecLocalGradCost",
	12: "MsgTrainGradAndCost",
	13: "MsgTrainUpdCostGrad",
	14: "MsgTrainStatus",
	15: "MsgTrainCheckStatus",
	16: "MsgTrainModels",
	17: "MsgPredictHup",
	18: "MsgPredictPart",
	19: "MsgPredictFinal",
}

var MessageType_value = map[string]int32{
	"MsgPsiEnc":                0,
	"MsgPsiAskReEnc":           1,
	"MsgPsiReEnc":              2,
	"MsgPsiIntersect":          3,
	"MsgTrainHup":              4,
	"MsgHomoPubkey":            5,
	"MsgTrainLoop":             6,
	"MsgTrainCalLocalGradCost": 7,
	"MsgTrainPartBytes":        8,
	"MsgTrainCalEncGradCost":   9,
	"MsgTrainEncGradCost":      10,
	"MsgTrainDecLocalGradCost": 11,
	"MsgTrainGradAndCost":      12,
	"MsgTrainUpdCostGrad":      13,
	"MsgTrainStatus":           14,
	"MsgTrainCheckStatus":      15,
	"MsgTrainModels":           16,
	"MsgPredictHup":            17,
	"MsgPredictPart":           18,
	"MsgPredictFinal":          19,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}

func (MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cba41b5f67b9a4c9, []int{0}
}

type Message struct {
	Type                 MessageType                `protobuf:"varint,1,opt,name=type,proto3,enum=logic_reg_vl.MessageType" json:"type,omitempty"`
	To                   string                     `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	From                 string                     `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	LoopRound            uint64                     `protobuf:"varint,4,opt,name=loopRound,proto3" json:"loopRound,omitempty"`
	VlLPsiReEncIDsReq    *mpc.VLPsiReEncIDsRequest  `protobuf:"bytes,5,opt,name=vlLPsiReEncIDsReq,proto3" json:"vlLPsiReEncIDsReq,omitempty"`
	VlLPsiReEncIDsResp   *mpc.VLPsiReEncIDsResponse `protobuf:"bytes,6,opt,name=vlLPsiReEncIDsResp,proto3" json:"vlLPsiReEncIDsResp,omitempty"`
	HomoPubkey           []byte                     `protobuf:"bytes,7,opt,name=homoPubkey,proto3" json:"homoPubkey,omitempty"`
	PartBytes            []byte                     `protobuf:"bytes,8,opt,name=PartBytes,proto3" json:"PartBytes,omitempty"`
	EncGradFromOther     []byte                     `protobuf:"bytes,9,opt,name=encGradFromOther,proto3" json:"encGradFromOther,omitempty"`
	EncCostFromOther     []byte                     `protobuf:"bytes,10,opt,name=encCostFromOther,proto3" json:"encCostFromOther,omitempty"`
	GradBytes            []byte                     `protobuf:"bytes,11,opt,name=gradBytes,proto3" json:"gradBytes,omitempty"`
	CostBytes            []byte                     `protobuf:"bytes,12,opt,name=costBytes,proto3" json:"costBytes,omitempty"`
	Stopped              bool                       `protobuf:"varint,13,opt,name=stopped,proto3" json:"stopped,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_cba41b5f67b9a4c9, []int{0}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetType() MessageType {
	if m != nil {
		return m.Type
	}
	return MessageType_MsgPsiEnc
}

func (m *Message) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Message) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Message) GetLoopRound() uint64 {
	if m != nil {
		return m.LoopRound
	}
	return 0
}

func (m *Message) GetVlLPsiReEncIDsReq() *mpc.VLPsiReEncIDsRequest {
	if m != nil {
		return m.VlLPsiReEncIDsReq
	}
	return nil
}

func (m *Message) GetVlLPsiReEncIDsResp() *mpc.VLPsiReEncIDsResponse {
	if m != nil {
		return m.VlLPsiReEncIDsResp
	}
	return nil
}

func (m *Message) GetHomoPubkey() []byte {
	if m != nil {
		return m.HomoPubkey
	}
	return nil
}

func (m *Message) GetPartBytes() []byte {
	if m != nil {
		return m.PartBytes
	}
	return nil
}

func (m *Message) GetEncGradFromOther() []byte {
	if m != nil {
		return m.EncGradFromOther
	}
	return nil
}

func (m *Message) GetEncCostFromOther() []byte {
	if m != nil {
		return m.EncCostFromOther
	}
	return nil
}

func (m *Message) GetGradBytes() []byte {
	if m != nil {
		return m.GradBytes
	}
	return nil
}

func (m *Message) GetCostBytes() []byte {
	if m != nil {
		return m.CostBytes
	}
	return nil
}

func (m *Message) GetStopped() bool {
	if m != nil {
		return m.Stopped
	}
	return false
}

type PredictMessage struct {
	Type                 MessageType                `protobuf:"varint,1,opt,name=type,proto3,enum=logic_reg_vl.MessageType" json:"type,omitempty"`
	To                   string                     `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	From                 string                     `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	VlLPsiReEncIDsReq    *mpc.VLPsiReEncIDsRequest  `protobuf:"bytes,4,opt,name=vlLPsiReEncIDsReq,proto3" json:"vlLPsiReEncIDsReq,omitempty"`
	VlLPsiReEncIDsResp   *mpc.VLPsiReEncIDsResponse `protobuf:"bytes,5,opt,name=vlLPsiReEncIDsResp,proto3" json:"vlLPsiReEncIDsResp,omitempty"`
	PredictPart          []float64                  `protobuf:"fixed64,6,rep,packed,name=predictPart,proto3" json:"predictPart,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *PredictMessage) Reset()         { *m = PredictMessage{} }
func (m *PredictMessage) String() string { return proto.CompactTextString(m) }
func (*PredictMessage) ProtoMessage()    {}
func (*PredictMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_cba41b5f67b9a4c9, []int{1}
}

func (m *PredictMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PredictMessage.Unmarshal(m, b)
}
func (m *PredictMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PredictMessage.Marshal(b, m, deterministic)
}
func (m *PredictMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PredictMessage.Merge(m, src)
}
func (m *PredictMessage) XXX_Size() int {
	return xxx_messageInfo_PredictMessage.Size(m)
}
func (m *PredictMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PredictMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PredictMessage proto.InternalMessageInfo

func (m *PredictMessage) GetType() MessageType {
	if m != nil {
		return m.Type
	}
	return MessageType_MsgPsiEnc
}

func (m *PredictMessage) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *PredictMessage) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *PredictMessage) GetVlLPsiReEncIDsReq() *mpc.VLPsiReEncIDsRequest {
	if m != nil {
		return m.VlLPsiReEncIDsReq
	}
	return nil
}

func (m *PredictMessage) GetVlLPsiReEncIDsResp() *mpc.VLPsiReEncIDsResponse {
	if m != nil {
		return m.VlLPsiReEncIDsResp
	}
	return nil
}

func (m *PredictMessage) GetPredictPart() []float64 {
	if m != nil {
		return m.PredictPart
	}
	return nil
}

func init() {
	proto.RegisterEnum("logic_reg_vl.MessageType", MessageType_name, MessageType_value)
	proto.RegisterType((*Message)(nil), "logic_reg_vl.Message")
	proto.RegisterType((*PredictMessage)(nil), "logic_reg_vl.PredictMessage")
}

func init() {
	proto.RegisterFile("mpc/learners/logic_reg_vl/logic_reg_vl.proto", fileDescriptor_cba41b5f67b9a4c9)
}

var fileDescriptor_cba41b5f67b9a4c9 = []byte{
	// 613 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x94, 0xdd, 0x6e, 0xd3, 0x4c,
	0x10, 0x86, 0x3f, 0x27, 0x69, 0xd2, 0x4c, 0x7e, 0xba, 0x99, 0xea, 0x83, 0x6d, 0x55, 0x21, 0xab,
	0x47, 0x56, 0x05, 0x89, 0x54, 0xae, 0xa0, 0xff, 0x2d, 0x6a, 0x44, 0x64, 0x0a, 0x42, 0x9c, 0x54,
	0xee, 0x7a, 0x71, 0xac, 0x3a, 0xde, 0x65, 0x77, 0x53, 0x29, 0xb7, 0xc2, 0xed, 0x70, 0x59, 0x9c,
	0x20, 0x7b, 0xed, 0xc4, 0x69, 0xcb, 0x09, 0x82, 0x93, 0x28, 0xfb, 0xbc, 0xef, 0xcc, 0x78, 0x67,
	0x46, 0x0b, 0xaf, 0x67, 0x92, 0x8d, 0x12, 0x1e, 0xa8, 0x94, 0x2b, 0x3d, 0x4a, 0x44, 0x14, 0xb3,
	0x5b, 0xc5, 0xa3, 0xdb, 0x87, 0x64, 0xed, 0x30, 0x94, 0x4a, 0x18, 0x81, 0xdd, 0x2a, 0xdb, 0xed,
	0x65, 0xb1, 0x52, 0xc7, 0x56, 0xdc, 0xff, 0x59, 0x87, 0xd6, 0x98, 0x6b, 0x1d, 0x44, 0x1c, 0xdf,
	0x40, 0xc3, 0x2c, 0x24, 0xa7, 0x8e, 0xeb, 0x78, 0xfd, 0xc3, 0x9d, 0xe1, 0x5a, 0xae, 0xc2, 0x74,
	0xb3, 0x90, 0xdc, 0xcf, 0x6d, 0xd8, 0x87, 0x9a, 0x11, 0xb4, 0xe6, 0x3a, 0x5e, 0xdb, 0xaf, 0x19,
	0x81, 0x08, 0x8d, 0xaf, 0x4a, 0xcc, 0x68, 0x3d, 0x27, 0xf9, 0x7f, 0xdc, 0x83, 0x76, 0x22, 0x84,
	0xf4, 0xc5, 0x3c, 0x0d, 0x69, 0xc3, 0x75, 0xbc, 0x86, 0xbf, 0x02, 0x78, 0x01, 0x83, 0x87, 0xe4,
	0x7a, 0xa2, 0x63, 0x9f, 0x9f, 0xa5, 0xec, 0xea, 0x54, 0xfb, 0xfc, 0x1b, 0xdd, 0x70, 0x1d, 0xaf,
	0x73, 0xb8, 0x33, 0x9c, 0x49, 0x36, 0xfc, 0xf4, 0x48, 0x9c, 0x73, 0x6d, 0xfc, 0xa7, 0x31, 0xf8,
	0x0e, 0xf0, 0x31, 0xd4, 0x92, 0x36, 0xf3, 0x4c, 0xbb, 0xcf, 0x65, 0xd2, 0x52, 0xa4, 0x9a, 0xfb,
	0xcf, 0x44, 0xe1, 0x2b, 0x80, 0xa9, 0x98, 0x89, 0xc9, 0xfc, 0xee, 0x9e, 0x2f, 0x68, 0xcb, 0x75,
	0xbc, 0xae, 0x5f, 0x21, 0xd9, 0x95, 0x26, 0x81, 0x32, 0xc7, 0x0b, 0xc3, 0x35, 0xdd, 0xcc, 0xe5,
	0x15, 0xc0, 0x03, 0x20, 0x3c, 0x65, 0x17, 0x2a, 0x08, 0xcf, 0x95, 0x98, 0xbd, 0x37, 0x53, 0xae,
	0x68, 0x3b, 0x37, 0x3d, 0xe1, 0x85, 0xf7, 0x44, 0x68, 0xb3, 0xf2, 0xc2, 0xd2, 0xbb, 0xc6, 0xb3,
	0xaa, 0x91, 0x0a, 0x42, 0x5b, 0xb5, 0x63, 0xab, 0x2e, 0x41, 0xa6, 0x32, 0xa1, 0x8b, 0x6f, 0xea,
	0x5a, 0x75, 0x09, 0x90, 0x42, 0x4b, 0x1b, 0x21, 0x25, 0x0f, 0x69, 0xcf, 0x75, 0xbc, 0x4d, 0xbf,
	0x3c, 0xee, 0x7f, 0xaf, 0x41, 0x7f, 0xa2, 0x78, 0x18, 0x33, 0xf3, 0x0f, 0x97, 0xe0, 0xd9, 0x31,
	0x37, 0xfe, 0xda, 0x98, 0x37, 0xfe, 0x68, 0xcc, 0x2e, 0x74, 0xa4, 0xbd, 0x79, 0x36, 0x3c, 0xda,
	0x74, 0xeb, 0x9e, 0xe3, 0x57, 0xd1, 0xc1, 0x8f, 0x3a, 0x74, 0x2a, 0x17, 0xc6, 0x1e, 0xb4, 0xc7,
	0x3a, 0x9a, 0xe8, 0xf8, 0x2c, 0x65, 0xe4, 0x3f, 0x44, 0xe8, 0xdb, 0xe3, 0x91, 0xbe, 0xcf, 0x33,
	0x13, 0x07, 0xb7, 0xa0, 0x63, 0x99, 0x05, 0x35, 0xdc, 0x86, 0x2d, 0x0b, 0xae, 0x52, 0xc3, 0x95,
	0xe6, 0xcc, 0x90, 0x7a, 0xe1, 0xba, 0x51, 0x41, 0x9c, 0x5e, 0xce, 0x25, 0x69, 0xe0, 0x00, 0x7a,
	0x63, 0x1d, 0x5d, 0x2e, 0x77, 0x8c, 0x6c, 0x20, 0x81, 0x6e, 0xe9, 0xb9, 0x16, 0x42, 0x92, 0x26,
	0xee, 0x01, 0x2d, 0xc9, 0x49, 0x90, 0x5c, 0x0b, 0x16, 0x24, 0xd9, 0x3a, 0x65, 0x6b, 0x42, 0x5a,
	0xf8, 0x3f, 0x0c, 0x4a, 0x75, 0xb9, 0x8c, 0x64, 0x13, 0x77, 0xe1, 0x45, 0x25, 0xe8, 0xcc, 0x6e,
	0x60, 0x1e, 0xd2, 0xc6, 0x97, 0xb0, 0x5d, 0x6a, 0x55, 0x01, 0xaa, 0x95, 0x4e, 0x39, 0x5b, 0xaf,
	0xd4, 0xa9, 0x86, 0x65, 0xf4, 0x28, 0xb5, 0x42, 0xb7, 0x2a, 0x7c, 0x94, 0x39, 0xcc, 0x74, 0xd2,
	0x2b, 0x3a, 0x95, 0x0b, 0x1f, 0x4c, 0x60, 0xe6, 0x9a, 0xf4, 0xab, 0xe6, 0x93, 0x29, 0x67, 0xf7,
	0x85, 0xb0, 0x55, 0x35, 0x8f, 0x45, 0xc8, 0x13, 0x4d, 0x48, 0xd1, 0x9f, 0x62, 0x51, 0xb3, 0x96,
	0x0d, 0xca, 0xee, 0xaf, 0xc6, 0x45, 0xb0, 0x6c, 0xb6, 0x65, 0xe7, 0x71, 0x1a, 0x24, 0x64, 0xfb,
	0xf8, 0xf2, 0xcb, 0x79, 0x14, 0x9b, 0xe9, 0xfc, 0x6e, 0xc8, 0xc4, 0x6c, 0x34, 0x09, 0xc2, 0x30,
	0xe1, 0xf6, 0xb7, 0x38, 0x9c, 0xde, 0x7c, 0x1e, 0x85, 0x41, 0x3c, 0xca, 0xdf, 0x43, 0x3d, 0xfa,
	0xed, 0xd3, 0x7a, 0xd7, 0xcc, 0x1d, 0x6f, 0x7f, 0x05, 0x00, 0x00, 0xff, 0xff, 0x24, 0xe1, 0xd7,
	0xbc, 0x7e, 0x05, 0x00, 0x00,
}
